# Spring Boot Configuration
# This file demonstrates YAML configuration, which is more readable than properties files

spring:
  application:
    name: comprehensive-dev-portal
  
  # Database Configuration
  datasource:
    # PostgreSQL Database - devacademykiro database
    url: jdbc:postgresql://localhost:5432/devacademykirostart
    driverClassName: org.postgresql.Driver
    username: postgres
    password: password
    
    # Connection Pool Configuration (HikariCP)
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
    
  # JPA/Hibernate Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create-drop  # Creates schema on startup, drops on shutdown
    show-sql: true  # Shows SQL queries in console (great for learning!)
    format-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
      
  # Security Configuration
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN
      
  # Cache Configuration
  cache:
    type: simple
    
  # Development Tools
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

# Server Configuration - REST API Server
server:
  port: 9090
  servlet:
    context-path: /api
    
# Actuator Configuration (for monitoring and health checks)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
  endpoint:
    health:
      show-details: always
      
# Logging Configuration
logging:
  level:
    com.learningportal: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    
# Custom Application Properties
app:
  name: Comprehensive Developer Portal
  version: 1.0.0
  description: The most comprehensive learning portal for Java, Spring, React, and System Design
  features:
    - Java Fundamentals to Advanced
    - Spring Framework Ecosystem
    - React Development
    - Data Structures & Algorithms
    - System Design
    - Interview Preparation
    - Interactive Code Editor
    - Progress Tracking