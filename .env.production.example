# Production Environment Configuration Template
# Copy this file to .env.production and update with your actual production values
# NEVER commit .env.production to version control!

# =============================================================================
# CRITICAL: ALL VALUES MUST BE CHANGED FOR PRODUCTION
# =============================================================================

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
APP_NAME=senior-dev-academy
SPRING_PROFILES_ACTIVE=production
SERVER_PORT=8080
SERVER_CONTEXT_PATH=/api

# =============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# =============================================================================
# PostgreSQL Production Database
DB_URL=jdbc:postgresql://your-db-host:5432/devacademykiro
DB_DRIVER=org.postgresql.Driver
DB_USERNAME=appuser
DB_PASSWORD=CHANGE_THIS_TO_STRONG_PASSWORD  # REQUIRED: Use strong password (16+ chars)

# Connection Pool Settings (Tuned for Production)
DB_POOL_MAX_SIZE=50
DB_POOL_MIN_IDLE=10
DB_POOL_IDLE_TIMEOUT=300000
DB_POOL_CONNECTION_TIMEOUT=30000
DB_POOL_MAX_LIFETIME=1800000
DB_POOL_LEAK_DETECTION=60000

# =============================================================================
# JPA/HIBERNATE CONFIGURATION (PRODUCTION)
# =============================================================================
JPA_DDL_AUTO=validate  # NEVER use create-drop in production!
JPA_SHOW_SQL=false     # Disable SQL logging in production
JPA_FORMAT_SQL=false
JPA_BATCH_SIZE=50
JPA_FETCH_SIZE=20

# =============================================================================
# SECURITY CONFIGURATION (REQUIRED)
# =============================================================================
# Admin Credentials - MUST BE CHANGED!
SECURITY_USER_NAME=CHANGE_THIS_ADMIN_USERNAME  # REQUIRED: Do NOT use "admin"
SECURITY_USER_PASSWORD=CHANGE_THIS_TO_STRONG_PASSWORD  # REQUIRED: 16+ chars, mixed case, numbers, symbols
SECURITY_USER_ROLES=ADMIN

# JWT Configuration - REQUIRED
JWT_SECRET=CHANGE_THIS_TO_RANDOM_32_PLUS_CHARACTER_STRING  # REQUIRED: Generate with: openssl rand -base64 32
JWT_EXPIRATION=3600000  # 1 hour (adjust as needed)

# =============================================================================
# CACHE CONFIGURATION (REDIS FOR PRODUCTION)
# =============================================================================
CACHE_TYPE=redis
CACHE_TTL=600000  # 10 minutes

# Redis Configuration
REDIS_HOST=your-redis-host  # Change to your Redis server
REDIS_PORT=6379
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD  # REQUIRED if Redis auth enabled
REDIS_TIMEOUT=5000
REDIS_POOL_MAX_ACTIVE=16
REDIS_POOL_MAX_IDLE=8
REDIS_POOL_MIN_IDLE=2

# =============================================================================
# LOGGING CONFIGURATION (PRODUCTION)
# =============================================================================
LOGGING_LEVEL_ROOT=WARN
LOGGING_LEVEL_APP=INFO
LOGGING_LEVEL_SECURITY=WARN
LOGGING_LEVEL_SQL=WARN
LOGGING_LEVEL_SQL_PARAMS=WARN
LOGGING_FILE=/var/log/comprehensive-dev-portal/application.log
LOGGING_FILE_MAX_SIZE=50MB
LOGGING_FILE_MAX_HISTORY=90

# =============================================================================
# ACTUATOR/MONITORING CONFIGURATION
# =============================================================================
MANAGEMENT_ENDPOINTS_ENABLED=true
MANAGEMENT_HEALTH_SHOW_DETAILS=when-authorized  # Hide details from unauthorized users

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
UPLOAD_MAX_FILE_SIZE=10MB
UPLOAD_MAX_REQUEST_SIZE=50MB
UPLOAD_DIR=/opt/comprehensive-dev-portal/uploads

# =============================================================================
# EXTERNAL API CONFIGURATION (OPTIONAL)
# =============================================================================
# GitHub Integration (if enabled)
GITHUB_TOKEN=your_github_token_here

# Stack Overflow Integration (if enabled)
STACKOVERFLOW_KEY=your_stackoverflow_key_here

# =============================================================================
# EMAIL CONFIGURATION (OPTIONAL)
# =============================================================================
# SMTP Configuration for notifications
MAIL_HOST=smtp.gmail.com
MAIL_PORT=587
MAIL_USERNAME=your_email@example.com
MAIL_PASSWORD=your_email_password_or_app_password

# =============================================================================
# FEATURE FLAGS
# =============================================================================
FEATURE_CODE_EXECUTION=true
FEATURE_AI_ASSISTANCE=true
FEATURE_PROGRESS_ANALYTICS=true
FEATURE_SOCIAL_FEATURES=false

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
PERFORMANCE_MONITORING_ENABLED=true
PERFORMANCE_SLOW_QUERY_THRESHOLD=500  # Log queries slower than 500ms
PERFORMANCE_REQUEST_TIMEOUT=60000     # 60 seconds

# =============================================================================
# SSL/TLS CONFIGURATION (OPTIONAL - Usually handled by reverse proxy)
# =============================================================================
# Uncomment if terminating SSL at application level
# SSL_ENABLED=true
# SSL_KEY_STORE=/path/to/keystore.p12
# SSL_KEY_STORE_PASSWORD=your_keystore_password
# SSL_KEY_STORE_TYPE=PKCS12
# SSL_KEY_ALIAS=tomcat

# =============================================================================
# CORS CONFIGURATION (OPTIONAL)
# =============================================================================
# Uncomment and configure if needed
# CORS_ALLOWED_ORIGINS=https://your-domain.com,https://www.your-domain.com
# CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
# CORS_ALLOWED_HEADERS=*
# CORS_ALLOW_CREDENTIALS=true

# =============================================================================
# BACKUP CONFIGURATION (OPTIONAL)
# =============================================================================
BACKUP_ENABLED=true
BACKUP_DIR=/opt/backups
BACKUP_RETENTION_DAYS=30

# =============================================================================
# MONITORING AND ALERTING (OPTIONAL)
# =============================================================================
# Prometheus Configuration
PROMETHEUS_ENABLED=true

# Alert Email (for critical errors)
ALERT_EMAIL=admin@your-domain.com

# Slack Webhook (for notifications)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# =============================================================================
# PRODUCTION CHECKLIST
# =============================================================================
# Before deploying to production, ensure:
# [ ] All CHANGE_THIS_* values have been updated
# [ ] Strong passwords are used (16+ characters)
# [ ] JWT secret is randomly generated (32+ characters)
# [ ] Database credentials are secure
# [ ] Redis password is set (if using Redis)
# [ ] Logging levels are appropriate (INFO/WARN)
# [ ] JPA DDL auto is set to "validate"
# [ ] SQL logging is disabled
# [ ] Firewall rules are configured
# [ ] SSL/TLS certificates are installed
# [ ] Backup procedures are in place
# [ ] Monitoring and alerting are configured
# [ ] This file is NOT committed to version control

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Generate strong JWT secret: openssl rand -base64 32
# 2. Generate strong passwords: openssl rand -base64 24
# 3. Never use default credentials in production
# 4. Rotate secrets regularly (every 90 days recommended)
# 5. Use environment-specific secrets (don't reuse dev secrets)
# 6. Store secrets securely (use secret management tools)
# 7. Limit access to this file (chmod 600)
# 8. Never commit this file to version control
# 9. Use different credentials for each environment
# 10. Enable audit logging for security events

# =============================================================================
# PERFORMANCE NOTES
# =============================================================================
# 1. Tune connection pool based on expected load
# 2. Monitor slow queries and optimize as needed
# 3. Use Redis for distributed caching
# 4. Enable compression in reverse proxy
# 5. Configure appropriate timeouts
# 6. Monitor memory usage and adjust JVM settings
# 7. Use CDN for static assets
# 8. Enable HTTP/2 in reverse proxy
# 9. Implement rate limiting
# 10. Regular performance testing and optimization
