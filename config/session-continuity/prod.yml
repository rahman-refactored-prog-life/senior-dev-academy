# Session Continuity System - Production Environment Configuration

spring:
  profiles:
    active: prod
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:prod-db.session-continuity.com}:${DB_PORT:5432}/${DB_NAME:session_continuity_prod}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        cache:
          use_second_level_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory

server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  http2:
    enabled: true
  ssl:
    enabled: ${SSL_ENABLED:true}
    key-store: ${SSL_KEYSTORE_PATH:/opt/session-continuity/ssl/keystore.p12}
    key-store-password: ${SSL_KEYSTORE_PASSWORD}
    key-store-type: PKCS12

logging:
  level:
    com.learningportal.continuity: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: ERROR
    org.springframework.security: WARN
  file:
    name: /var/log/session-continuity/application.log
    max-size: 500MB
    max-history: 90
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"

# Session Continuity Configuration
session-continuity:
  enabled: true
  
  # Context Capture Settings
  capture:
    auto-capture: true
    capture-interval: 300s  # 5 minutes
    timeout: 15s
    parallel-processing: true
    batch-size: 20
    retry-attempts: 3
    
  # Documentation Synchronization
  documentation:
    sync-enabled: true
    sync-interval: 600s     # 10 minutes
    validation-enabled: true
    required-files: 11
    consistency-check: true
    conflict-resolution: manual-review
    backup-before-sync: true
    
  # Quality Gates Configuration
  quality-gates:
    compilation:
      enabled: true
      block-on-failure: true
      timeout: 120s
      retry-attempts: 3
      notification-on-failure: true
    documentation:
      enabled: true
      required-files: 11
      consistency-threshold: 0.98
      cross-validation: true
      integrity-check: true
    progress:
      enabled: true
      accuracy-threshold: 0.98
      real-time-validation: true
      anomaly-detection: true
    quality-assurance:
      enabled: true
      strict-mode: true
      compliance-check: true
      
  # Context Recovery Settings
  recovery:
    auto-recovery: true
    confidence-threshold: 0.95
    max-attempts: 10
    fallback-enabled: true
    notification-enabled: true
    escalation-enabled: true
    
  # Performance Configuration
  performance:
    capture-parallel: true
    sync-async: true
    cache-enabled: true
    cache-size: 5000
    monitoring-enabled: true
    metrics-collection: true
    alerting-enabled: true
    performance-targets:
      capture-time: 5s
      sync-time: 10s
      recovery-time: 30s
    
  # Storage Configuration
  storage:
    base-path: /opt/session-continuity/data
    backup-path: /opt/session-continuity/backups
    redundancy-layers: 4
    compression-enabled: true
    encryption-enabled: true
    encryption-algorithm: AES-256-GCM
    
  # Security Settings (Production)
  security:
    encryption-enabled: true
    encryption-key: ${ENCRYPTION_KEY}
    audit-logging: true
    access-control: true
    session-timeout: 1800s  # 30 minutes
    ip-whitelist: ${ALLOWED_IPS:}
    
  # High Availability Configuration
  high-availability:
    enabled: true
    cluster-mode: true
    replication-factor: 3
    failover-timeout: 30s
    health-check-interval: 10s

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: never
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
      datadog:
        enabled: ${DATADOG_ENABLED:false}
        api-key: ${DATADOG_API_KEY:}
    tags:
      environment: production
      service: session-continuity
      version: ${APP_VERSION:unknown}

# Production-specific settings
debug: false
trace: false

# External service configurations
external-services:
  notification:
    enabled: true
    webhook-url: ${NOTIFICATION_WEBHOOK_URL}
    slack-webhook: ${SLACK_WEBHOOK_URL}
    email-enabled: true
    email-smtp-host: ${SMTP_HOST}
    email-smtp-port: ${SMTP_PORT:587}
    email-username: ${SMTP_USERNAME}
    email-password: ${SMTP_PASSWORD}
  
  monitoring:
    enabled: true
    endpoint: ${MONITORING_ENDPOINT}
    api-key: ${MONITORING_API_KEY}
    
  backup:
    enabled: true
    schedule: "0 1 * * *"  # Daily at 1 AM
    retention-days: 90
    s3-bucket: ${BACKUP_S3_BUCKET}
    s3-region: ${BACKUP_S3_REGION:us-east-1}
    
  alerting:
    enabled: true
    pagerduty-key: ${PAGERDUTY_INTEGRATION_KEY}
    opsgenie-key: ${OPSGENIE_API_KEY}
    
# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      sessionCapture:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
      documentationSync:
        failure-rate-threshold: 30
        wait-duration-in-open-state: 60s
        sliding-window-size: 20
        
  retry:
    instances:
      sessionCapture:
        max-attempts: 3
        wait-duration: 1s
      contextRecovery:
        max-attempts: 5
        wait-duration: 2s

# Rate Limiting
bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets
      url: /api/continuity/.*
      rate-limits:
        - bandwidths:
            - capacity: 100
              time: 1
              unit: minutes
          cache-key: getRemoteAddr()

# Security Configuration
security:
  oauth2:
    enabled: ${OAUTH2_ENABLED:false}
    client-id: ${OAUTH2_CLIENT_ID}
    client-secret: ${OAUTH2_CLIENT_SECRET}
    
  jwt:
    enabled: ${JWT_ENABLED:true}
    secret: ${JWT_SECRET}
    expiration: 3600  # 1 hour
    
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://session-continuity.com}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    
# Database Migration
flyway:
  enabled: true
  locations: classpath:db/migration
  baseline-on-migrate: false
  validate-on-migrate: true